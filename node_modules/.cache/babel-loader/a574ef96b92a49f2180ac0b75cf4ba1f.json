{"ast":null,"code":"var _jsxFileName = \"/Users/pavanbelagatti/Desktop/workarea/ellert/Frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //useState is a function that returns an array with two items in it.\n  // the first item ( here called greeting ) is the value that you pass as an argument to use state, in this case an empty string (\"\")\n  // the second item is a function ( here called setGreeting ) that we can use to change the value of the first item ( greeting )\n  // when ever we call this function the App function will be called and the view will be updated with the new value\n  const [greeting, setGreeting] = useState(\"\"); //useEffect is a function that takes a function and an array as arguments. The function runs once when the component loads\n  // and then again if any of the state variables in the array are canged. What matters most here is that if you leave the array empty\n  // the code in the function will only run once but not every time we call setGreeting (like the App function).\n\n  useEffect(() => {\n    const getGreeting = async () => {\n      //to be able to use async and await in useEffect we need to create an async function.\n      const response = await fetch(\"http://localhost:5001\"); //we fetch from our api server running on port 5001\n\n      const data = await response.json(); //we get the json data\n      //the data is an array with one item. This item is an object with _id and greeting properties\n      //this makes sense since we turned the data into an array in line 20 in server.js and the array is the collection from MongoDB\n      //this collection has only one document and our objet represents the data in that document.\n      //now let's get the string from greeting into our greeting state:\n\n      setGreeting(data[0].greeting);\n    };\n\n    getGreeting();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: greeting\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sRGVxs/uAqyufEwh9BD66JifNMQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pavanbelagatti/Desktop/workarea/ellert/Frontend/src/App.js"],"names":["useEffect","useState","App","greeting","setGreeting","getGreeting","response","fetch","data","json"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC,CALa,CAOb;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMK,WAAW,GAAG,YAAS;AAAE;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAD,CAA5B,CAD2B,CAC2B;;AACtD,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAF2B,CAES;AACpC;AACA;AACA;AAEA;;AACAL,MAAAA,WAAW,CAACI,IAAI,CAAC,CAAD,CAAJ,CAAQL,QAAT,CAAX;AACD,KATD;;AAWAE,IAAAA,WAAW;AACZ,GAbQ,EAaN,EAbM,CAAT;AAcA,sBACE;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA7BQD,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import {useEffect, useState} from 'react';\nfunction App() {\n  //useState is a function that returns an array with two items in it.\n  // the first item ( here called greeting ) is the value that you pass as an argument to use state, in this case an empty string (\"\")\n  // the second item is a function ( here called setGreeting ) that we can use to change the value of the first item ( greeting )\n  // when ever we call this function the App function will be called and the view will be updated with the new value\n  const [greeting, setGreeting] = useState(\"\");\n  \n  //useEffect is a function that takes a function and an array as arguments. The function runs once when the component loads\n  // and then again if any of the state variables in the array are canged. What matters most here is that if you leave the array empty\n  // the code in the function will only run once but not every time we call setGreeting (like the App function).\n  useEffect(()=>{\n    const getGreeting = async()=>{ //to be able to use async and await in useEffect we need to create an async function.\n      const response = await fetch(\"http://localhost:5001\");//we fetch from our api server running on port 5001\n      const data = await response.json(); //we get the json data\n      //the data is an array with one item. This item is an object with _id and greeting properties\n      //this makes sense since we turned the data into an array in line 20 in server.js and the array is the collection from MongoDB\n      //this collection has only one document and our objet represents the data in that document.\n\n      //now let's get the string from greeting into our greeting state:\n      setGreeting(data[0].greeting);\n    }\n    \n    getGreeting();\n  }, [])\n  return (\n    <div>\n      {greeting}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}